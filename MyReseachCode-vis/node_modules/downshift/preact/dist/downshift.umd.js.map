{"version":3,"file":"downshift.umd.js","sources":["../../src/set-a11y-status.js","../../src/stateChangeTypes.js","../../node_modules/compute-scroll-into-view/es/index.js","../../src/utils.js","../../src/downshift.js"],"sourcesContent":["// istanbul ignore next\nlet statusDiv =\n  typeof document === 'undefined'\n    ? null\n    : document.getElementById('a11y-status-message')\n\nlet statuses = []\n\n/**\n * @param {String} status the status message\n */\nfunction setStatus(status) {\n  const isSameAsLast = statuses[statuses.length - 1] === status\n  if (isSameAsLast) {\n    statuses = [...statuses, status]\n  } else {\n    statuses = [status]\n  }\n  const div = getStatusDiv()\n\n  // Remove previous children\n  while (div.lastChild) {\n    div.removeChild(div.firstChild)\n  }\n\n  statuses.filter(Boolean).forEach((statusItem, index) => {\n    div.appendChild(getStatusChildDiv(statusItem, index))\n  })\n}\n\n/**\n * @param {String} status the status message\n * @param {Number} index the index\n * @return {HTMLElement} the child node\n */\nfunction getStatusChildDiv(status, index) {\n  const display = index === statuses.length - 1 ? 'block' : 'none'\n\n  const childDiv = document.createElement('div')\n  childDiv.style.display = display\n  childDiv.textContent = status\n\n  return childDiv\n}\n\n/**\n * Get the status node or create it if it does not already exist\n * @return {HTMLElement} the status node\n */\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv\n  }\n  statusDiv = document.createElement('div')\n  statusDiv.setAttribute('id', 'a11y-status-message')\n  statusDiv.setAttribute('role', 'status')\n  statusDiv.setAttribute('aria-live', 'assertive')\n  statusDiv.setAttribute('aria-relevant', 'additions text')\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px',\n  })\n  document.body.appendChild(statusDiv)\n  return statusDiv\n}\n\nexport default setStatus\n","import productionEnum from './productionEnum.macro'\n\nexport const unknown = productionEnum('__autocomplete_unknown__')\nexport const mouseUp = productionEnum('__autocomplete_mouseup__')\nexport const itemMouseEnter = productionEnum('__autocomplete_item_mouseenter__')\nexport const keyDownArrowUp = productionEnum(\n  '__autocomplete_keydown_arrow_up__',\n)\nexport const keyDownArrowDown = productionEnum(\n  '__autocomplete_keydown_arrow_down__',\n)\nexport const keyDownEscape = productionEnum('__autocomplete_keydown_escape__')\nexport const keyDownEnter = productionEnum('__autocomplete_keydown_enter__')\nexport const clickItem = productionEnum('__autocomplete_click_item__')\nexport const blurInput = productionEnum('__autocomplete_blur_input__')\nexport const changeInput = productionEnum('__autocomplete_change_input__')\nexport const keyDownSpaceButton = productionEnum(\n  '__autocomplete_keydown_space_button__',\n)\nexport const clickButton = productionEnum('__autocomplete_click_button__')\nexport const blurButton = productionEnum('__autocomplete_blur_button__')\nexport const controlledPropUpdatedSelectedItem = productionEnum(\n  '__autocomplete_controlled_prop_updated_selected_item__',\n)\nexport const touchStart = productionEnum('__autocomplete_touchstart__')\n","function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart < scrollingEdgeStart && elementSize < scrollingSize || elementEdgeEnd > scrollingEdgeEnd && elementSize > scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});","import computeScrollIntoView from 'compute-scroll-into-view'\nimport {isPreact} from './is.macro'\n\nlet idCounter = 0\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop\n}\n\nfunction noop() {}\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} rootNode the root element of the component\n */\nfunction scrollIntoView(node, rootNode) {\n  if (node === null) {\n    return\n  }\n\n  const actions = computeScrollIntoView(node, {\n    boundary: rootNode,\n    block: 'nearest',\n    scrollMode: 'if-needed',\n  })\n  actions.forEach(({el, top, left}) => {\n    el.scrollTop = top\n    el.scrollLeft = left\n  })\n}\n\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\nfunction isOrContainsNode(parent, child) {\n  return parent === child || (parent.contains && parent.contains(child))\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  let timeoutId\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n  }\n\n  function wrapper(...args) {\n    cancel()\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      fn(...args)\n    }, time)\n  }\n\n  wrapper.cancel = cancel\n\n  return wrapper\n}\n\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\nfunction callAllEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      if (fn) {\n        fn(event, ...args)\n      }\n      return (\n        event.preventDownshiftDefault ||\n        (event.hasOwnProperty('nativeEvent') &&\n          event.nativeEvent.preventDownshiftDefault)\n      )\n    })\n}\n\n/**\n * This return a function that will call all the given functions with\n * the arguments with which it's called. It does a null-check before\n * attempting to call the functions and can take any number of functions.\n * @param {...Function} fns the functions to call\n * @return {Function} the function that calls all the functions\n */\nfunction callAll(...fns) {\n  return (...args) => {\n    fns.forEach(fn => {\n      if (fn) {\n        fn(...args)\n      }\n    })\n  }\n}\n\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\nfunction generateId() {\n  return String(idCounter++)\n}\n\n/**\n * This is only used in tests\n * @param {Number} num the number to set the idCounter to\n */\nfunction setIdCounter(num) {\n  idCounter = num\n}\n\n/**\n * Resets idCounter to 0. Used for SSR.\n */\nfunction resetIdCounter() {\n  idCounter = 0\n}\n\n/**\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\nfunction getA11yStatusMessage({\n  isOpen,\n  highlightedItem,\n  selectedItem,\n  resultCount,\n  previousResultCount,\n  itemToString,\n}) {\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem)\n    } else {\n      return ''\n    }\n  }\n  const resultCountChanged = resultCount !== previousResultCount\n  if (!resultCount) {\n    return 'No results.'\n  } else if (!highlightedItem || resultCountChanged) {\n    return `${resultCount} ${\n      resultCount === 1 ? 'result is' : 'results are'\n    } available, use up and down arrow keys to navigate.`\n  }\n  return itemToString(highlightedItem)\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg\n  if (!arg && defaultValue) {\n    return defaultValue\n  } else {\n    return arg\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (isPreact) {\n    // then this is preact\n    return typeof element.nodeName === 'string'\n  }\n\n  // then we assume this is react\n  return typeof element.type === 'string'\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n\n  /* istanbul ignore if */\n  if (isPreact) {\n    return element.attributes\n  }\n\n  return element.props\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(`The property \"${propName}\" is required in \"${fnName}\"`)\n}\n\nconst stateKeys = [\n  'highlightedIndex',\n  'inputValue',\n  'isOpen',\n  'selectedItem',\n  'type',\n]\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\nfunction pickState(state = {}) {\n  const result = {}\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k]\n    }\n  })\n  return result\n}\n\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\nfunction normalizeArrowKey(event) {\n  const {key, keyCode} = event\n  /* istanbul ignore next (ie) */\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return `Arrow${key}`\n  }\n  return key\n}\n\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n\nexport {\n  cbToCb,\n  callAllEventHandlers,\n  callAll,\n  debounce,\n  scrollIntoView,\n  generateId,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  isOrContainsNode,\n  noop,\n  requiredProp,\n  setIdCounter,\n  resetIdCounter,\n  pickState,\n  isPlainObject,\n  normalizeArrowKey,\n}\n","/* eslint camelcase:0 */\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {isPreact, isReactNative} from './is.macro'\nimport setA11yStatus from './set-a11y-status'\nimport * as stateChangeTypes from './stateChangeTypes'\nimport {\n  cbToCb,\n  callAll,\n  callAllEventHandlers,\n  debounce,\n  scrollIntoView,\n  generateId,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  isOrContainsNode,\n  getElementProps,\n  noop,\n  requiredProp,\n  pickState,\n  isPlainObject,\n  normalizeArrowKey,\n} from './utils'\n\nclass Downshift extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    defaultHighlightedIndex: PropTypes.number,\n    defaultSelectedItem: PropTypes.any,\n    defaultInputValue: PropTypes.string,\n    defaultIsOpen: PropTypes.bool,\n    getA11yStatusMessage: PropTypes.func,\n    itemToString: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onInputValueChange: PropTypes.func,\n    onUserAction: PropTypes.func,\n    onOuterClick: PropTypes.func,\n    selectedItemChanged: PropTypes.func,\n    stateReducer: PropTypes.func,\n    itemCount: PropTypes.number,\n    id: PropTypes.string,\n    environment: PropTypes.shape({\n      addEventListener: PropTypes.func,\n      removeEventListener: PropTypes.func,\n      document: PropTypes.shape({\n        getElementById: PropTypes.func,\n        activeElement: PropTypes.any,\n        body: PropTypes.any,\n      }),\n    }),\n    suppressRefError: PropTypes.bool,\n    scrollIntoView: PropTypes.func,\n    // things we keep in state for uncontrolled components\n    // but can accept as props for controlled components\n    /* eslint-disable react/no-unused-prop-types */\n    selectedItem: PropTypes.any,\n    isOpen: PropTypes.bool,\n    inputValue: PropTypes.string,\n    highlightedIndex: PropTypes.number,\n    labelId: PropTypes.string,\n    inputId: PropTypes.string,\n    menuId: PropTypes.string,\n    getItemId: PropTypes.func,\n    /* eslint-enable react/no-unused-prop-types */\n  }\n\n  static defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultSelectedItem: null,\n    defaultInputValue: '',\n    defaultIsOpen: false,\n    getA11yStatusMessage,\n    itemToString: i => {\n      if (i == null) {\n        return ''\n      }\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        isPlainObject(i) &&\n        !i.hasOwnProperty('toString')\n      ) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.',\n          'The object that was passed:',\n          i,\n        )\n      }\n      return String(i)\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n      typeof window === 'undefined' /* istanbul ignore next (ssr) */\n        ? {}\n        : window,\n    stateReducer: (state, stateToSet) => stateToSet,\n    suppressRefError: false,\n    scrollIntoView,\n  }\n\n  static stateChangeTypes = stateChangeTypes\n\n  constructor(props) {\n    super(props)\n    const state = this.getState({\n      highlightedIndex: this.props.defaultHighlightedIndex,\n      isOpen: this.props.defaultIsOpen,\n      inputValue: this.props.defaultInputValue,\n      selectedItem: this.props.defaultSelectedItem,\n    })\n    if (state.selectedItem != null) {\n      state.inputValue = this.props.itemToString(state.selectedItem)\n    }\n    this.state = state\n  }\n\n  id = this.props.id || `downshift-${generateId()}`\n  menuId = this.props.menuId || `${this.id}-menu`\n  labelId = this.props.labelId || `${this.id}-label`\n  inputId = this.props.inputId || `${this.id}-input`\n  getItemId = this.props.getItemId || (index => `${this.id}-item-${index}`)\n\n  input = null\n  items = []\n  // itemCount can be changed asynchronously\n  // from within downshift (so it can't come from a prop)\n  // this is why we store it as an instance and use\n  // getItemCount rather than just use items.length\n  // (to support windowing + async)\n  itemCount = null\n  previousResultCount = 0\n\n  timeoutIds = []\n\n  /**\n   * @param {Function} fn the function to call after the time\n   * @param {Number} time the time to wait\n   */\n  internalSetTimeout = (fn, time) => {\n    const id = setTimeout(() => {\n      this.timeoutIds = this.timeoutIds.filter(i => i !== id)\n      fn()\n    }, time)\n\n    this.timeoutIds.push(id)\n  }\n\n  /**\n   * Clear all running timeouts\n   */\n  internalClearTimeouts() {\n    this.timeoutIds.forEach(id => {\n      clearTimeout(id)\n    })\n\n    this.timeoutIds = []\n  }\n\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  getState(stateToMerge = this.state) {\n    return Object.keys(stateToMerge).reduce((state, key) => {\n      state[key] = this.isControlledProp(key)\n        ? this.props[key]\n        : stateToMerge[key]\n      return state\n    }, {})\n  }\n\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n  isControlledProp(key) {\n    return this.props[key] !== undefined\n  }\n\n  getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    let itemCount = this.items.length\n    if (this.itemCount != null) {\n      itemCount = this.itemCount\n    } else if (this.props.itemCount !== undefined) {\n      itemCount = this.props.itemCount\n    }\n    return itemCount\n  }\n\n  setItemCount = count => {\n    this.itemCount = count\n  }\n\n  unsetItemCount = () => {\n    this.itemCount = null\n  }\n\n  getItemNodeFromIndex(index) {\n    return this.props.environment.document.getElementById(this.getItemId(index))\n  }\n\n  setHighlightedIndex = (\n    highlightedIndex = this.props.defaultHighlightedIndex,\n    otherStateToSet = {},\n  ) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState({highlightedIndex, ...otherStateToSet})\n  }\n\n  scrollHighlightedItemIntoView() {\n    /* istanbul ignore else (react-native) */\n    if (!isReactNative) {\n      const node = this.getItemNodeFromIndex(this.getState().highlightedIndex)\n      this.props.scrollIntoView(node, this._rootNode)\n    }\n  }\n\n  moveHighlightedIndex(amount, otherStateToSet) {\n    if (this.getState().isOpen) {\n      this.changeHighlightedIndex(amount, otherStateToSet)\n    } else {\n      this.setHighlightedIndex(undefined, {isOpen: true, ...otherStateToSet})\n    }\n  }\n\n  changeHighlightedIndex(moveAmount, otherStateToSet) {\n    const itemsLastIndex = this.getItemCount() - 1\n    if (itemsLastIndex < 0) {\n      return\n    }\n    const {highlightedIndex} = this.getState()\n    let baseIndex = highlightedIndex\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1\n    }\n    let newIndex = baseIndex + moveAmount\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0\n    }\n    this.setHighlightedIndex(newIndex, otherStateToSet)\n  }\n\n  clearSelection = cb => {\n    this.internalSetState(\n      {\n        selectedItem: null,\n        inputValue: '',\n        isOpen: false,\n      },\n      cb,\n    )\n  }\n\n  selectItem = (item, otherStateToSet, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      {\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue: this.isControlledProp('selectedItem')\n          ? this.props.defaultInputValue\n          : this.props.itemToString(item),\n        ...otherStateToSet,\n      },\n      cb,\n    )\n  }\n\n  selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n    const item = this.items[itemIndex]\n    if (item == null) {\n      return\n    }\n    this.selectItem(item, otherStateToSet, cb)\n  }\n\n  selectHighlightedItem = (otherStateToSet, cb) => {\n    return this.selectItemAtIndex(\n      this.getState().highlightedIndex,\n      otherStateToSet,\n      cb,\n    )\n  }\n\n  // any piece of our state can live in two places:\n  // 1. Uncontrolled: it's internal (this.state)\n  //    We will call this.setState to update that state\n  // 2. Controlled: it's external (this.props)\n  //    We will call this.props.onStateChange to update that state\n  //\n  // In addition, we'll call this.props.onChange if the\n  // selectedItem is changed.\n  internalSetState = (stateToSet, cb) => {\n    let isItemSelected, onChangeArg\n\n    const onStateChangeArg = {}\n    const isStateToSetFunction = typeof stateToSet === 'function'\n\n    // we want to call `onInputValueChange` before the `setState` call\n    // so someone controlling the `inputValue` state gets notified of\n    // the input change as soon as possible. This avoids issues with\n    // preserving the cursor position.\n    // See https://github.com/paypal/downshift/issues/217 for more info.\n    if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n      this.props.onInputValueChange(stateToSet.inputValue, {\n        ...this.getStateAndHelpers(),\n        ...stateToSet,\n      })\n    }\n    return this.setState(\n      state => {\n        state = this.getState(state)\n        let newStateToSet = isStateToSetFunction\n          ? stateToSet(state)\n          : stateToSet\n\n        // Your own function that could modify the state that will be set.\n        newStateToSet = this.props.stateReducer(state, newStateToSet)\n\n        // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n        isItemSelected = newStateToSet.hasOwnProperty('selectedItem')\n        // this keeps track of the object we want to call with setState\n        const nextState = {}\n        // this is just used to tell whether the state changed\n        const nextFullState = {}\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (\n          isItemSelected &&\n          newStateToSet.selectedItem !== state.selectedItem\n        ) {\n          onChangeArg = newStateToSet.selectedItem\n        }\n        newStateToSet.type = newStateToSet.type || stateChangeTypes.unknown\n\n        Object.keys(newStateToSet).forEach(key => {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== newStateToSet[key]) {\n            onStateChangeArg[key] = newStateToSet[key]\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return\n          }\n          nextFullState[key] = newStateToSet[key]\n          // if it's coming from props, then we don't care to set it internally\n          if (!this.isControlledProp(key)) {\n            nextState[key] = newStateToSet[key]\n          }\n        })\n\n        // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n        if (\n          isStateToSetFunction &&\n          newStateToSet.hasOwnProperty('inputValue')\n        ) {\n          this.props.onInputValueChange(newStateToSet.inputValue, {\n            ...this.getStateAndHelpers(),\n            ...newStateToSet,\n          })\n        }\n\n        return nextState\n      },\n      () => {\n        // call the provided callback if it's a function\n        cbToCb(cb)()\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1\n        if (hasMoreStateThanType) {\n          this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers())\n        }\n\n        if (isItemSelected) {\n          this.props.onSelect(\n            stateToSet.selectedItem,\n            this.getStateAndHelpers(),\n          )\n        }\n\n        if (onChangeArg !== undefined) {\n          this.props.onChange(onChangeArg, this.getStateAndHelpers())\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers())\n      },\n    )\n  }\n\n  getStateAndHelpers() {\n    const {highlightedIndex, inputValue, selectedItem, isOpen} = this.getState()\n    const {itemToString} = this.props\n    const {id} = this\n    const {\n      getRootProps,\n      getToggleButtonProps,\n      getLabelProps,\n      getMenuProps,\n      getInputProps,\n      getItemProps,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      reset,\n      setItemCount,\n      unsetItemCount,\n      internalSetState: setState,\n    } = this\n    return {\n      // prop getters\n      getRootProps,\n      getToggleButtonProps,\n      getLabelProps,\n      getMenuProps,\n      getInputProps,\n      getItemProps,\n\n      // actions\n      reset,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      setItemCount,\n      unsetItemCount,\n      setState,\n\n      // props\n      itemToString,\n\n      // derived\n      id,\n\n      // state\n      highlightedIndex,\n      inputValue,\n      isOpen,\n      selectedItem,\n    }\n  }\n\n  //////////////////////////// ROOT\n\n  rootRef = node => (this._rootNode = node)\n\n  getRootProps = (\n    {refKey = 'ref', ...rest} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    this.getRootProps.called = true\n    this.getRootProps.refKey = refKey\n    this.getRootProps.suppressRefError = suppressRefError\n    const {isOpen} = this.getState()\n    return {\n      [refKey]: this.rootRef,\n      role: 'combobox',\n      'aria-expanded': isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': isOpen ? this.menuId : null,\n      'aria-labelledby': this.labelId,\n      ...rest,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n  keyDownHandlers = {\n    ArrowDown(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? 5 : 1\n      this.moveHighlightedIndex(amount, {\n        type: stateChangeTypes.keyDownArrowDown,\n      })\n    },\n\n    ArrowUp(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? -5 : -1\n      this.moveHighlightedIndex(amount, {\n        type: stateChangeTypes.keyDownArrowUp,\n      })\n    },\n\n    Enter(event) {\n      const {isOpen, highlightedIndex} = this.getState()\n      if (isOpen && highlightedIndex != null) {\n        event.preventDefault()\n        const item = this.items[highlightedIndex]\n        const itemNode = this.getItemNodeFromIndex(highlightedIndex)\n        if (item == null || (itemNode && itemNode.hasAttribute('disabled'))) {\n          return\n        }\n        this.selectHighlightedItem({\n          type: stateChangeTypes.keyDownEnter,\n        })\n      }\n    },\n\n    Escape(event) {\n      event.preventDefault()\n      this.reset({type: stateChangeTypes.keyDownEscape})\n    },\n  }\n\n  //////////////////////////// BUTTON\n\n  buttonKeyDownHandlers = {\n    ...this.keyDownHandlers,\n\n    ' '(event) {\n      event.preventDefault()\n      this.toggleMenu({type: stateChangeTypes.keyDownSpaceButton})\n    },\n  }\n\n  getToggleButtonProps = ({\n    onClick,\n    onPress,\n    onKeyDown,\n    onKeyUp,\n    onBlur,\n    ...rest\n  } = {}) => {\n    const {isOpen} = this.getState()\n    const enabledEventHandlers = isReactNative\n      ? /* istanbul ignore next (react-native) */\n        {\n          onPress: callAllEventHandlers(onPress, this.button_handleClick),\n        }\n      : {\n          onClick: callAllEventHandlers(onClick, this.button_handleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, this.button_handleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, this.button_handleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, this.button_handleBlur),\n        }\n    const eventHandlers = rest.disabled ? {} : enabledEventHandlers\n    return {\n      type: 'button',\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-haspopup': true,\n      'data-toggle': true,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n\n  button_handleKeyUp = event => {\n    // Prevent click event from emitting in Firefox\n    event.preventDefault()\n  }\n\n  button_handleKeyDown = event => {\n    const key = normalizeArrowKey(event)\n    if (this.buttonKeyDownHandlers[key]) {\n      this.buttonKeyDownHandlers[key].call(this, event)\n    }\n  }\n\n  button_handleClick = event => {\n    event.preventDefault()\n    // handle odd case for Safari and Firefox which\n    // don't give the button the focus properly.\n    /* istanbul ignore if (can't reasonably test this) */\n    if (\n      this.props.environment.document.activeElement ===\n      this.props.environment.document.body\n    ) {\n      event.target.focus()\n    }\n    // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n    // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n    // when building for production and should therefore have no impact on production code.\n    if (process.env.NODE_ENV === 'test') {\n      this.toggleMenu({type: stateChangeTypes.clickButton})\n    } else {\n      // Ensure that toggle of menu occurs after the potential blur event in iOS\n      this.internalSetTimeout(() =>\n        this.toggleMenu({type: stateChangeTypes.clickButton}),\n      )\n    }\n  }\n\n  button_handleBlur = event => {\n    const blurTarget = event.target // Save blur target for comparison with activeElement later\n    // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n    this.internalSetTimeout(() => {\n      if (\n        !this.isMouseDown &&\n        (this.props.environment.document.activeElement == null ||\n          this.props.environment.document.activeElement.id !== this.inputId) &&\n        this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n      ) {\n        this.reset({type: stateChangeTypes.blurButton})\n      }\n    })\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n  /////////////////////////////// LABEL\n\n  getLabelProps = props => {\n    return {htmlFor: this.inputId, id: this.labelId, ...props}\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n  /////////////////////////////// INPUT\n\n  getInputProps = ({\n    onKeyDown,\n    onBlur,\n    onChange,\n    onInput,\n    onChangeText,\n    ...rest\n  } = {}) => {\n    let onChangeKey\n    let eventHandlers = {}\n\n    /* istanbul ignore next (preact) */\n    if (isPreact) {\n      onChangeKey = 'onInput'\n    } else {\n      onChangeKey = 'onChange'\n    }\n    const {inputValue, isOpen, highlightedIndex} = this.getState()\n\n    if (!rest.disabled) {\n      eventHandlers = {\n        [onChangeKey]: callAllEventHandlers(\n          onChange,\n          onInput,\n          this.input_handleChange,\n        ),\n        onKeyDown: callAllEventHandlers(onKeyDown, this.input_handleKeyDown),\n        onBlur: callAllEventHandlers(onBlur, this.input_handleBlur),\n      }\n    }\n\n    /* istanbul ignore if (react-native) */\n    if (isReactNative) {\n      eventHandlers = {\n        ...eventHandlers,\n        onChangeText: callAllEventHandlers(\n          onChangeText,\n          onInput,\n          this.input_handleTextChange,\n        ),\n      }\n    }\n\n    return {\n      'aria-autocomplete': 'list',\n      'aria-activedescendant':\n        isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0\n          ? this.getItemId(highlightedIndex)\n          : null,\n      'aria-controls': isOpen ? this.menuId : null,\n      'aria-labelledby': this.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: inputValue,\n      id: this.inputId,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n\n  input_handleKeyDown = event => {\n    const key = normalizeArrowKey(event)\n    if (key && this.keyDownHandlers[key]) {\n      this.keyDownHandlers[key].call(this, event)\n    }\n  }\n\n  input_handleChange = event => {\n    this.internalSetState({\n      type: stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: isReactNative\n        ? /* istanbul ignore next (react-native) */ event.nativeEvent.text\n        : event.target.value,\n    })\n  }\n\n  input_handleTextChange /* istanbul ignore next (react-native) */ = text => {\n    this.internalSetState({\n      type: stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: text,\n    })\n  }\n\n  input_handleBlur = () => {\n    // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n    this.internalSetTimeout(() => {\n      const downshiftButtonIsActive =\n        this.props.environment.document.activeElement.dataset.toggle &&\n        (this._rootNode &&\n          this._rootNode.contains(\n            this.props.environment.document.activeElement,\n          ))\n      if (!this.isMouseDown && !downshiftButtonIsActive) {\n        this.reset({type: stateChangeTypes.blurInput})\n      }\n    })\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n  /////////////////////////////// MENU\n\n  menuRef = node => {\n    this._menuNode = node\n  }\n\n  getMenuProps = (\n    {refKey = 'ref', ref, ...props} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    this.getMenuProps.called = true\n    this.getMenuProps.refKey = refKey\n    this.getMenuProps.suppressRefError = suppressRefError\n\n    return {\n      [refKey]: callAll(ref, this.menuRef),\n      role: 'listbox',\n      'aria-labelledby': props && props['aria-label'] ? null : this.labelId,\n      id: this.menuId,\n      ...props,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ MENU\n\n  /////////////////////////////// ITEM\n  getItemProps = ({\n    onMouseMove,\n    onMouseDown,\n    onClick,\n    onPress,\n    index,\n    item = process.env.NODE_ENV === 'production'\n      ? /* istanbul ignore next */ undefined\n      : requiredProp('getItemProps', 'item'),\n    ...rest\n  } = {}) => {\n    if (index === undefined) {\n      this.items.push(item)\n      index = this.items.indexOf(item)\n    } else {\n      this.items[index] = item\n    }\n\n    const onSelectKey = isReactNative\n      ? /* istanbul ignore next (react-native) */ 'onPress'\n      : 'onClick'\n    const customClickHandler = isReactNative\n      ? /* istanbul ignore next (react-native) */ onPress\n      : onClick\n\n    const enabledEventHandlers = {\n      // onMouseMove is used over onMouseEnter here. onMouseMove\n      // is only triggered on actual mouse movement while onMouseEnter\n      // can fire on DOM changes, interrupting keyboard navigation\n      onMouseMove: callAllEventHandlers(onMouseMove, () => {\n        if (index === this.getState().highlightedIndex) {\n          return\n        }\n        this.setHighlightedIndex(index, {\n          type: stateChangeTypes.itemMouseEnter,\n        })\n\n        // We never want to manually scroll when changing state based\n        // on `onMouseMove` because we will be moving the element out\n        // from under the user which is currently scrolling/moving the\n        // cursor\n        this.avoidScrolling = true\n        this.internalSetTimeout(() => (this.avoidScrolling = false), 250)\n      }),\n      onMouseDown: callAllEventHandlers(onMouseDown, event => {\n        // This prevents the activeElement from being changed\n        // to the item so it can remain with the current activeElement\n        // which is a more common use case.\n        event.preventDefault()\n      }),\n      [onSelectKey]: callAllEventHandlers(customClickHandler, () => {\n        this.selectItemAtIndex(index, {\n          type: stateChangeTypes.clickItem,\n        })\n      }),\n    }\n\n    // Passing down the onMouseDown handler to prevent redirect\n    // of the activeElement if clicking on disabled items\n    const eventHandlers = rest.disabled\n      ? {onMouseDown: enabledEventHandlers.onMouseDown}\n      : enabledEventHandlers\n\n    return {\n      id: this.getItemId(index),\n      role: 'option',\n      'aria-selected': this.getState().selectedItem === item,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  clearItems = () => {\n    this.items = []\n  }\n\n  reset = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({selectedItem}) => ({\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        inputValue: this.props.itemToString(selectedItem),\n        ...otherStateToSet,\n      }),\n      cb,\n    )\n  }\n\n  toggleMenu = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({isOpen}) => {\n        return {isOpen: !isOpen, ...otherStateToSet}\n      },\n      () => {\n        const {isOpen} = this.getState()\n        if (isOpen) {\n          // highlight default index\n          this.setHighlightedIndex(undefined, otherStateToSet)\n        }\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  openMenu = cb => {\n    this.internalSetState({isOpen: true}, cb)\n  }\n\n  closeMenu = cb => {\n    this.internalSetState({isOpen: false}, cb)\n  }\n\n  updateStatus = debounce(() => {\n    const state = this.getState()\n    const item = this.items[state.highlightedIndex]\n    const resultCount = this.getItemCount()\n    const status = this.props.getA11yStatusMessage({\n      itemToString: this.props.itemToString,\n      previousResultCount: this.previousResultCount,\n      resultCount,\n      highlightedItem: item,\n      ...state,\n    })\n    this.previousResultCount = resultCount\n\n    setA11yStatus(status)\n  }, 200)\n\n  componentDidMount() {\n    /* istanbul ignore if (react-native) */\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !isReactNative &&\n      this.getMenuProps.called &&\n      !this.getMenuProps.suppressRefError\n    ) {\n      validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps)\n    }\n\n    /* istanbul ignore if (react-native) */\n    if (isReactNative) {\n      this.cleanup = () => {\n        this.internalClearTimeouts()\n      }\n    } else {\n      const targetWithinDownshift = (target, checkActiveElement = true) => {\n        const {document} = this.props.environment\n        return [this._rootNode, this._menuNode].some(\n          contextNode =>\n            contextNode &&\n            (isOrContainsNode(contextNode, target) ||\n              (checkActiveElement &&\n                isOrContainsNode(contextNode, document.activeElement))),\n        )\n      }\n      // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n      const onMouseDown = () => {\n        this.isMouseDown = true\n      }\n      const onMouseUp = event => {\n        this.isMouseDown = false\n        // if the target element or the activeElement is within a downshift node\n        // then we don't want to reset downshift\n        const contextWithinDownshift = targetWithinDownshift(event.target)\n        if (!contextWithinDownshift && this.getState().isOpen) {\n          this.reset({type: stateChangeTypes.mouseUp}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n      // Touching an element in iOS gives focus and hover states, but touching out of\n      // the element will remove hover, and persist the focus state, resulting in the\n      // blur event not being triggered.\n      const onTouchStart = event => {\n        const contextWithinDownshift = targetWithinDownshift(\n          event.target,\n          false,\n        )\n        if (!contextWithinDownshift && this.getState().isOpen) {\n          this.reset({type: stateChangeTypes.touchStart}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n\n      this.props.environment.addEventListener('mousedown', onMouseDown)\n      this.props.environment.addEventListener('mouseup', onMouseUp)\n      this.props.environment.addEventListener('touchstart', onTouchStart)\n\n      this.cleanup = () => {\n        this.internalClearTimeouts()\n        this.updateStatus.cancel()\n        this.props.environment.removeEventListener('mousedown', onMouseDown)\n        this.props.environment.removeEventListener('mouseup', onMouseUp)\n        this.props.environment.removeEventListener('touchstart', onTouchStart)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    /* istanbul ignore if (react-native) */\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !isReactNative &&\n      this.getMenuProps.called &&\n      !this.getMenuProps.suppressRefError\n    ) {\n      validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps)\n    }\n\n    if (\n      this.isControlledProp('selectedItem') &&\n      this.props.selectedItemChanged(\n        prevProps.selectedItem,\n        this.props.selectedItem,\n      )\n    ) {\n      this.internalSetState({\n        type: stateChangeTypes.controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem),\n      })\n    }\n\n    const current =\n      this.props.highlightedIndex === undefined ? this.state : this.props\n    const prev =\n      prevProps.highlightedIndex === undefined ? prevState : prevProps\n\n    if (\n      current.highlightedIndex !== prev.highlightedIndex &&\n      !this.avoidScrolling\n    ) {\n      this.scrollHighlightedItemIntoView()\n    }\n\n    /* istanbul ignore else (react-native) */\n    if (!isReactNative) {\n      this.updateStatus()\n    }\n  }\n\n  componentWillUnmount() {\n    this.cleanup() // avoids memory leak\n  }\n\n  render() {\n    const children = unwrapArray(this.props.children, noop)\n    // because the items are rerendered every time we call the children\n    // we clear this out each render and it will be populated again as\n    // getItemProps is called.\n    this.clearItems()\n    // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n    this.getRootProps.called = false\n    this.getRootProps.refKey = undefined\n    this.getRootProps.suppressRefError = undefined\n    // we do something similar for getMenuProps\n    this.getMenuProps.called = false\n    this.getMenuProps.refKey = undefined\n    this.getMenuProps.suppressRefError = undefined\n    // we do something similar for getLabelProps\n    this.getLabelProps.called = false\n    // and something similar for getInputProps\n    this.getInputProps.called = false\n    const element = unwrapArray(children(this.getStateAndHelpers()))\n    if (!element) {\n      return null\n    }\n\n    if (this.getRootProps.called || this.props.suppressRefError) {\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !this.getRootProps.suppressRefError &&\n        !this.props.suppressRefError\n      ) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps)\n      }\n      return element\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React.cloneElement(\n        element,\n        this.getRootProps(getElementProps(element)),\n      )\n    }\n\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n\n      throw new Error(\n        'downshift: If you return a non-DOM element, you must use apply the getRootProps function',\n      )\n    }\n\n    /* istanbul ignore next */\n    return undefined\n  }\n}\n\nexport default Downshift\n\nfunction validateGetMenuPropsCalledCorrectly(node, {refKey}) {\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `downshift: The ref prop \"${refKey}\" from getMenuProps was not applied correctly on your menu element.`,\n    )\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, {refKey}) {\n  const refKeySpecified = refKey !== 'ref'\n  const isComposite = !isDOMElement(element)\n  if (isComposite && !refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'downshift: You returned a non-DOM element. You must specify a refKey in getRootProps',\n    )\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`,\n    )\n  }\n  if (!getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`,\n    )\n  }\n}\n"],"names":["statusDiv","document","getElementById","statuses","setStatus","status","isSameAsLast","length","div","getStatusDiv","lastChild","removeChild","firstChild","filter","Boolean","forEach","statusItem","index","appendChild","getStatusChildDiv","display","childDiv","createElement","style","textContent","setAttribute","Object","assign","border","clip","height","margin","overflow","padding","position","width","body","unknown","mouseUp","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","controlledPropUpdatedSelectedItem","touchStart","idCounter","cbToCb","cb","noop","scrollIntoView","node","rootNode","actions","computeScrollIntoView","boundary","block","scrollMode","el","top","left","scrollTop","scrollLeft","isOrContainsNode","parent","child","contains","debounce","fn","time","timeoutId","cancel","clearTimeout","wrapper","args","setTimeout","callAllEventHandlers","fns","event","some","preventDownshiftDefault","hasOwnProperty","nativeEvent","callAll","generateId","String","resetIdCounter","getA11yStatusMessage","isOpen","highlightedItem","selectedItem","resultCount","previousResultCount","itemToString","unwrapArray","arg","defaultValue","Array","isArray","isDOMElement","element","nodeName","getElementProps","attributes","requiredProp","fnName","propName","console","error","stateKeys","pickState","state","result","k","normalizeArrowKey","key","keyCode","indexOf","isPlainObject","obj","prototype","toString","call","Downshift","props","getState","highlightedIndex","defaultHighlightedIndex","defaultIsOpen","inputValue","defaultInputValue","defaultSelectedItem","internalClearTimeouts","timeoutIds","id","stateToMerge","keys","reduce","isControlledProp","undefined","getItemCount","itemCount","items","getItemNodeFromIndex","environment","getItemId","scrollHighlightedItemIntoView","_rootNode","moveHighlightedIndex","amount","otherStateToSet","changeHighlightedIndex","setHighlightedIndex","moveAmount","itemsLastIndex","baseIndex","newIndex","getStateAndHelpers","getRootProps","getToggleButtonProps","getLabelProps","getMenuProps","getInputProps","getItemProps","openMenu","closeMenu","toggleMenu","selectItem","selectItemAtIndex","selectHighlightedItem","clearSelection","clearItems","reset","setItemCount","unsetItemCount","setState","internalSetState","componentDidMount","called","suppressRefError","validateGetMenuPropsCalledCorrectly","_menuNode","targetWithinDownshift","target","checkActiveElement","contextNode","activeElement","onMouseDown","isMouseDown","onMouseUp","contextWithinDownshift","type","stateChangeTypes","onOuterClick","onTouchStart","addEventListener","cleanup","updateStatus","removeEventListener","componentDidUpdate","prevProps","prevState","selectedItemChanged","current","prev","avoidScrolling","componentWillUnmount","render","children","refKey","validateGetRootPropsCalledCorrectly","React","cloneElement","Error","Component","defaultProps","i","warn","onStateChange","onInputValueChange","onUserAction","onChange","onSelect","prevItem","item","window","stateReducer","stateToSet","menuId","labelId","inputId","input","internalSetTimeout","push","count","itemIndex","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","newStateToSet","nextState","nextFullState","hasMoreStateThanType","rootRef","rest","role","keyDownHandlers","ArrowDown","preventDefault","shiftKey","ArrowUp","Enter","itemNode","hasAttribute","Escape","buttonKeyDownHandlers","onClick","onPress","onKeyDown","onKeyUp","onBlur","enabledEventHandlers","button_handleClick","button_handleKeyDown","button_handleKeyUp","button_handleBlur","eventHandlers","disabled","focus","blurTarget","htmlFor","onInput","onChangeText","onChangeKey","input_handleChange","input_handleKeyDown","input_handleBlur","autoComplete","value","input_handleTextChange","text","downshiftButtonIsActive","dataset","toggle","menuRef","ref","onMouseMove","onSelectKey","customClickHandler","setA11yStatus","refKeySpecified","isComposite"],"mappings":"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"}